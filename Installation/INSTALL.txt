################################################################################
#################### Installation of the DADA2 nifH pipeline ###################
################################################################################

The DADA2 nifH pipeline uses a bunch of external tools (e.g. R, DADA2,
cutadapt).  To get them we will use miniconda3, a software package and
environment manager.  This document describes how to get miniconda3 and then use
it to create an "environment" that you will use whenever running the DADA2
pipeline.

These instructions are for installing tools on thalassa (linux machine).  The
overall process will be similar if you want to set up to run on your laptop.
Feel free to ask Jonathan for help.

Overview:
  0. Get the pipeline and all documentation (in a tgz file).
  1. Install Miniconda3.
  2. Create the DADA2_nifH environment. This step downloads external tools and
     includes them in a new environment for running the pipeline.
  3. Install the DADA2 R package.
  4. Add the pipeline scripts to your path.
  -- Installation completed! --
  5. Try the example

Below '%' is the unix shell prompt. Your's might differ.  The instructions are
the same whether you are using bash or tcsh shell, except for step #4.


--------------------------------------------------------------------------------
# 0. Get the DADA2 nifH pipeline, documents, etc.
--------------------------------------------------------------------------------

The file you are now reading is included in the DADA2 nifH package so you
probably already did this step.  If not, then do the following (for whichever
DATESTAMP you like):

  % cd ~
  % tar xvfz /home/jmagasin/ToolsShared/NifH_amplicons/DADA2/Shared/DADA2_nifH_pipeline.DATESTAMP.tgz

This creates a local copy of the tools in your home directory under
DADA2_nifH_pipeline.  This directory is only for the tools, not your analyses.


--------------------------------------------------------------------------------
# 1. Install Miniconda3
--------------------------------------------------------------------------------

In your home directory, create a temporary directory for installing miniconda3.

  % cd ~
  % mkdir Miniconda3Install
  % cd Miniconda3Install

The instructions below are all executed within Miniconda3Install.


For background, check out the Miniconda3 installation guide (but below are the
few steps you need for installing):
    https://conda.io/projects/conda/en/latest/user-guide/install/index.html
For thalassa we want to do a linux installation:
    https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html
The following will download the latest Miniconda3 installer for 64-bit linux and
calculate its SHA256 hash:

  % wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
  % sha256sum Miniconda3-latest-Linux-x86_64.sh

Check that installer has not been corrupted or compromised by verifying
that the hash reported above matches the one you see at:
    https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links
(If it does not, let me know!!)  In the table at the link you will see that the
latest Conda version is something >= 4.10.3.

Now to install Miniconda3:

  % bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda3

The install script will guide you. When it asks for permission to do various
things, in general just accept whatever it suggests:) Do say "yes" when it asks
"Do you wish the installer to initialize Miniconda3 by running conda init?"
This makes it possible to run miniconda3 commands from the shell by simply
typing "conda" rather than the full path to conda ($HOME/miniconda3/bin/conda).
[Detail: "yes" gives permission to the installer to change your shell startup
script (.bashrc or .tchsrc) to add miniconda3 to your path.]

If the installer reports success, then the following two commands should
succeed.

  % which conda
  % conda --help

You can now delete the directory Miniconda3Install.

  % cd ~
  % rm Miniconda3Install/Miniconda3-latest-Linux-x86_64.sh
  % rmdir Miniconda3Install


--------------------------------------------------------------------------------
# 2. Create the DADA2_nifH environment
--------------------------------------------------------------------------------

Create a conda environment called "DADA2_nifH" that includes nearly everything
needed to run the DADA2 nifH pipeline. This step will take awhile (~10 min):

  % conda env update -n DADA2_nifH --file ~/DADA2_nifH_pipeline/Installation/environment_DADA2_nifH.yml

Installation 98% complete!  Let's verify the conda DADA2_nifH environment.
First, activate it:

  % conda activate DADA2_nifH

Activating an environment changes the prompt to be prefixed by the environment
name (possibly split over two lines):

  (DADA2_nifH) %

Check that several tools required by the DADA2 nifH pipeline are now
installed. (Example output shown for user "you".)

  (DADA2_nifH) % which R
  /home/you/miniconda3/envs/DADA2_nifH/bin/R
  (DADA2_nifH) % R --version
  R version 4.1.1 (2021-08-10) -- "Kick Things"
  ...
  (DADA2_nifH) % which cutadapt
  /home/you/miniconda3/envs/DADA2_nifH/bin/cutadapt
  (DADA2_nifH) % which hmmalign
  /home/you/miniconda3/envs/DADA2_nifH/bin/hmmalign

Later, you can deactivate the environment with:

  (DADA2_nifH) % conda deactivate

after which the 'which' commands above will report errors or will find the
default versions of the tools on thalassa (e.g. /usr/bin/R which is v3.5.2, not
R v4.1 within the DADA2_nifH environment).

Whenever you want to use the DADA2 nifH pipeline, you must first activate
the DADA2_nifH environment.


--------------------------------------------------------------------------------
# 3. Install the DADA2 R package
--------------------------------------------------------------------------------

We will use Bioconductor (an R package) to install DADA2 as described at:
    https://bioconductor.org/packages/release/bioc/html/dada2.html
In the shell, with DADA2_nifH active, start R:

  (DADA2_nifH) % R

and in the R console paste the following lines:

   ## Install Bioconductor if necessary.
   if (!requireNamespace("BiocManager", quietly = TRUE))
       install.packages("BiocManager")
   ## Now use Bioconductor to install the latest dada2.  This takes a long time.
   ## Check in periodically because at some point you will be asked if you want
   ## to update all/some/none of several mysteriously named packages.  Choose
   ## all.
   BiocManager::install("dada2")

The install takes around 30 min on thalassa because DADA2 uses many additional
packages that must be downloaded and compiled.  At the end of a successful
install, you should see a few messages about tests that worked. Additionally you
can verify that dada2 is now installed by loading it (and then you can exit R).

    library(dada2) # Better work!
    quit()         # Hit 'n' when it asks if you want to save.


Notes:
  1. The DADA2 R package will be available only when DADA2_nifH is active.
     (miniconda3 does not manage the R packages. However, the R package files
     are stored alongside the R that installed them, in this case
       ~/miniconda3/envs/DADA2_nifH/lib/R/library/dada2
     Keep this in mind when installing other R packages while using conda.)

  2. Step #2 above installed R v4.1 (specified in the .yml file) because that
     version is required for DADA2 v3.13, which was the most recent DADA2 on
     Aug. 12, 2021.  At some point, a new version of DADA2 might require a newer
     version of R and I will have to change the .yml file.  If step #3 fails,
     then perhaps we are at that poin!

  3. There is a way to install DADA2 using conda (rather than Bioconductor),
     however it seems broken as of Aug. 12, 2021.


--------------------------------------------------------------------------------
# 4. Add the pipeline scripts to your path
--------------------------------------------------------------------------------


Short version (if you are very comfortable with unix shells):

Modify your path to include these two components:
  ~/DADA2_nifH_pipeline
  ~/DADA2_nifH_pipeline/scripts
The first will enable run_DADA2_pipeline.sh to be found. The second is mainly
for organizeFastqs.R.


Longer version with a little unix shell background:

When you login to thalassa, your shell will be initialized by running a few
scripts that set up various preferences, including your 'path'.  When you type a
command, the shell uses the path to locate the program that runs the command.
This saves you much typing, e.g. you can simply run "R" rather than "/usr/bin/R"
(and you don't have to remember where R is).  When you activate the DADA2_nifH
environment, miniconda3 temporarily modifies your path to find the needed tools,
which are often specific versions such as R v4.1 mentioned above.

The scripts that comprise the DADA2 nifH pipeline are not in a conda package.
So we have to modify the path ourselves.  For convenience we will modify the
shell initialization script so that every time you login to thalassa the DADA2
pipeline scripts will be added to your path.

Note that:
  1. This section assumes you installed the pipeline in ~/DADA2_nifH_pipeline as
     described in step #0.  If you installed elsewhere, just adjust path
     components accordingly.
  2. The commands below assume DADA2_nifH is active. It is fine if DADA2_nifH is
     not active.

First, determine if your shell is bash or tcsh because they have slightly
different syntaxes and initialization scripts.

  (DADA2_nifH) % echo $0

If bash, then do this.  Be *very* careful to use the *double* angle brackets >>
so that the path setting command is *appended* to .bashrc.  [First we will make
a backup of .bashrc just in case.] Also be careful that you type everything
exactly as shown in this ASCII text document.  Cut-and-paste from an email or
Word document could change the quotes.  The 'tail' command just shows that the
path setting command was appended to .bashrc.

  (DADA2_nifH) % cp ~/.bashrc ~/.bashrc.OLD
  (DADA2_nifH) % echo 'export PATH=$PATH:~/DADA2_nifH_pipeline:~/DADA2_nifH_pipeline/scripts' >> ~/.bashrc
  (DADA2_nifH) % tail ~/.bashrc

If tcsh, do this. The same cautions mentioned above apply here.

  (DADA2_nifH) % cp ~/.tcshrc ~/.tcshrc.OLD
  (DADA2_nifH) % echo 'setenv PATH $PATH:~/DADA2_nifH_pipeline:~/DADA2_nifH_pipeline/scripts' >> ~/.tcshrc
  (DADA2_nifH) % tail ~/.tcshrc

The path modifications will only become active when you next login (ssh) to
thalassa.  Log off (deactivate DADA2_nifH if necessary, then 'exit' or
'logout'), then ssh back into thalassa.

Now verify that the shell can find these two main pipeline scripts:

  % which run_DADA2_pipeline.sh
  /home/you/DADA2_nifH_pipeline/run_DADA2_pipeline.sh
  % run_DADA2_pipeline.sh --help
  % which organizeFastqs.R
  /home/you/DADA2_nifH_pipeline/scripts/organizeFastqs.R

Although the shell can find the scripts, of course you have to first activate
DADA2_nifH for them to work.  (--help will work though).

  % conda activate DADA2_nifH

That's it!  You should now be able to run the pipeline on a small example.


--------------------------------------------------------------------------------
# 5. Try the mini Arctic 2017 example
--------------------------------------------------------------------------------

Please see the example:

  % cd ~/DADA2_nifH_pipeline/Example/EXAMPLE.txt

You can probably begin at step 2.


-- END --
